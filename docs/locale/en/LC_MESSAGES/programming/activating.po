# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Open Boat Projects
# This file is distributed under the same license as the OBP40 V1
# Dokumentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OBP40 V1 Dokumentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 12:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"

#: ../../programming/activating.rst:4 c8822ee3ffc84dc191201538a403a8bf
#, fuzzy
msgid "Kompilieren und Download"
msgstr "Compile and download"

#: ../../programming/activating.rst:6 13153f590d844693b96e81e935b3698f
#, fuzzy
msgid ""
"Die Firmware zum OBP40 kann recht einfach an eigene Bedürfnisse angepasst "
"werden. Als Programmier-Entwicklungsumgebung wird \"PlatformIO\" verwendet. "
"Der Source-Code befindet sich zentral auf Github im Internet. Alle Software-"
"Revisionen sind dort verfügbar. Es können bei Bedarf aktuelle oder ältere "
"Versionen benutzt werden. Als Betriebssysteme werden Linux, Windows und Mac "
"iOS unterstützt. Zum Kompilieren der Firmware gibt es zwei Möglichkeiten."
msgstr ""
"The firmware for the OBP40 can be easily customized to your needs. "
"PlatformIO is used as the programming development environment. The source "
"code is centrally located on Github. All software revisions are available "
"there. Current or older versions can be used as needed. Linux, Windows, and "
"Mac iOS are supported as operating systems. There are two ways to compile "
"the firmware."

#: ../../programming/activating.rst:8 fe6ea2fdc1eb46d18c634c3a60fee575
#, fuzzy
msgid "Verwendung von **Gitpod** (webbasiert in Cloud)"
msgstr "Using **Gitpod** (web-based in cloud)"

#: ../../programming/activating.rst:9 b136deef542446439aab3b3b39e7722b
#, fuzzy
msgid "**Visual Studio Code** mit **PlatformIO** Plugin (lokal auf dem PC)"
msgstr "**Visual Studio Code** with **PlatformIO** plugin (locally on the PC)"

#: ../../programming/activating.rst:12 682cb5b37c0a4359b229a6486b07574e
#, fuzzy
msgid ""
"Die Arduino IDE wird nicht als Programmier-Entwicklungsumgebung verwendet, "
"da der Source-Code sehr komplex ist und die Arduino IDE nicht über eine "
"sinnvolle Querverweisfunktion verfügt. Notwendige Tool-Chains und "
"Bibliotheken werden in PlatformIO in der richtigen Version hinzugelinkt und "
"ermöglichen eine fehlerfreie Kompilierung."
msgstr ""
"The Arduino IDE is not used as a programming development environment because"
" the source code is very complex and the Arduino IDE lacks a useful cross-"
"referencing function. Necessary tool chains and libraries are linked in the "
"correct version in PlatformIO, enabling error-free compilation."

#: ../../programming/activating.rst:15 07b9276228ba456d840ad9493b86c34b
#, fuzzy
msgid "Gitpod"
msgstr "Gitpod"

#: ../../programming/activating.rst:17 b6c36aee03cb46b0b33c13348db33783
#, fuzzy
msgid ""
"Gitpod ist eine standartisierte Entwicklungsumgebung, die webbasiert ist und"
" in der Cloud läuft. So ist es möglich, auf jedem Rechner, der über einen "
"aktuellen Webbrowser verfügt, eine Code-Entwicklung durchzuführen ohne "
"spezielle Installation von irgendwelchen Softwarebestandteilen. Zur "
"Benutzung des Dienstes ist eine Anmeldung bei Github notwendig. Die Code-"
"Entwicklungsumgebung in Anlehnung an PlatformIO befindet sich jederzeit in "
"einem aktuellen Zustand. Abhängigkeiten zu externen Bibliotheken werden "
"selbständig aufgelöst und integriert. Das System ist sofort benutzbar und "
"ist besonders für Anfänger geeignet oder für kleine Änderungen, die "
"unterwegs mal schnell durchgeführt werden sollen. Die Benutzung von Gitpod "
"ist in der Free-Variante kostenfrei, unterliegt jedoch einigen "
"Einschränkungen bezüglich der Nutzungszeit und bereitgestellten "
"Rechnerhardware. Aktuell sind 50 Stunden Nutzungszeit pro Monat frei und "
"vollkommen ausreichend für einfache Änderungen. Wer mehr Zeit benötigt oder "
"schnellere Hardware einsetzen möchte, kann den kostenpflichtigen Service von"
" Gitpod nutzen. Weitere Details findet man auf der `Webseite von Gitpod`_."
msgstr ""
"Gitpod is a standardized, web-based development environment that runs in the"
" cloud. This makes it possible to develop code on any computer with a modern"
" web browser without installing any special software components. To use the "
"service, you must register with Github. The code development environment, "
"based on PlatformIO, is always kept up-to-date. Dependencies on external "
"libraries are automatically resolved and integrated. The system is ready to "
"use and is particularly suitable for beginners or for small changes that "
"need to be made quickly on the go. The free version of Gitpod is free to "
"use, but is subject to some restrictions regarding usage time and provided "
"computer hardware. Currently, 50 hours of usage time per month are free and "
"perfectly sufficient for simple changes. Those who need more time or want to"
" use faster hardware can use Gitpod's paid service. Further details can be "
"found on the `Webseite von Gitpod`_."

#: ../../programming/activating.rst:21 6da0615d682a44e58776db06faa7168a
#, fuzzy
msgid "**Der Workflow bei Gitpod sieht folgendermaßen aus:**"
msgstr "**The Gitpod workflow looks like this:**"

#: ../../programming/activating.rst:23 ../../programming/activating.rst:159
#: 83f203563cf046919f2dbaa9919d0113 df4c1018d9344a5f971391a1285db84c
#, fuzzy
msgid "OBP40-Github-Projekt in eigenes Github-Repository forken"
msgstr "Fork the OBP40 Github project into your own Github repository"

#: ../../programming/activating.rst:24 8e6e5817c08b47bc97189ccd1f6df8d4
#, fuzzy
msgid "Gitpod-Link zum Projekt öffnen"
msgstr "Open Gitpod link to the project"

#: ../../programming/activating.rst:25 df70c489eff4480090550825c400c649
#, fuzzy
msgid "In Gitpod Entwicklungsumgebung und Hardware auswählen"
msgstr "Select development environment and hardware in Gitpod"

#: ../../programming/activating.rst:26 23aaabfc338d46999ee518391f1b669f
#, fuzzy
msgid ""
"Start eines Containers mit der Entwicklungsumgebung und Download des "
"Projektes aus dem eigenen Github-Repository"
msgstr ""
"Start a container with the development environment and download the project "
"from your own Github repository"

#: ../../programming/activating.rst:27 ../../programming/activating.rst:161
#: 2d9efa39aedd471e974b81bee883ccba b99a6fa23ac54b42b0ad6ffc04b5656f
#, fuzzy
msgid "Source-Code in der Entwicklungsumgebung ändern und kompilieren"
msgstr "Modify and compile source code in the development environment"

#: ../../programming/activating.rst:28 f50db0c40d614475bac39a28237c328b
#, fuzzy
msgid "Download des Binary-Files"
msgstr "Download des Binary-Files"

#: ../../programming/activating.rst:29 ../../programming/activating.rst:164
#: 221bc6c95245453b9d13c339ab65a73e c0636b5c3c124d2e955a0bdccf91fa0f
#, fuzzy
msgid "Aktualisierung der Änderungen im eigenen Github-Repository"
msgstr "Updating the changes in your own Github repository"

#: ../../programming/activating.rst:33 ../../programming/activating.rst:167
#: 47c65629073e443cb016a42266813035 bc9810b22db14f8a8bd7921e54cd2eae
#, fuzzy
msgid "Github-Projekt forken"
msgstr "Fork Github project"

#: ../../programming/activating.rst:35 dc31ec03b35e41ccbddb4e1d6568b736
#, fuzzy
msgid ""
"Als erstes wird das Original-Projekt zum OBP40 in das eigene private "
"Repository geforkt. Ein Fork ist sozusagen eine Aufgabelung bzw. eine "
"Abtrennung des Source-Codes in einen neuen Zweig. Durch einen Fork entsteht "
"eine Kopie des Original-Projektes in Ihrem privaten Repository. So können "
"Sie Änderungen am Code vornehmen und in ihrem Repository speichern. Der neu "
"entstandene Code ist dann eine Erweiterung oder Modifikation des Original-"
"Projektes."
msgstr ""
"First, the original OBP40 project is forked into your private repository. A "
"fork is essentially a split or separation of the source code into a new "
"branch. A fork creates a copy of the original project in your private "
"repository. This allows you to make changes to the code and save it in your "
"repository. The newly created code is then an extension or modification of "
"the original project."

#: ../../programming/activating.rst:38 ../../programming/activating.rst:172
#: 2fb71060059b4791a5fd22ea8d2f0a37 b1000e1956a14e949f2a90a39dbfcfb8
#, fuzzy
msgid "Nur mit einem Fork ist es möglich, eigene Code-Änderungen zu sichern."
msgstr "Only with a fork is it possible to save your own code changes."

#: ../../programming/activating.rst:42 ../../programming/activating.rst:176
#: 1c0dec676f2e4e229760ee8f2fe66b48 8b7f55667ea04ce280a80684130cb5a5
#, fuzzy
msgid "Abb.: Fork erstellen"
msgstr "Fig.: Create a fork"

#: ../../programming/activating.rst:44 19d7686055004abf8c88de34424e2ef8
#, fuzzy
msgid ""
"Melden Sie sich als erstes bei Github an und gehen dann in das `Original-"
"Projekt zum OBP60`_ und drücken oben rechts auf die Schaltfläche **Fork**. "
"Sie werden danach gefragt, ob sie der Quelle vertrauen und können dann einen"
" neuen Projektnamen vergeben oder den originalen Projektnamen benutzen. "
"Kopieren Sie sich danach den Link zu ihrem Github-Projekt aus der Browser-"
"Zeile. Sie sollten dann einen ähnlichen Link haben wie diesen:"
msgstr ""
"First, log in to Github, then go to `Original-Projekt zum OBP60`_ and click "
"the **Fork** button in the top right corner. You'll be asked whether you "
"trust the source and can then choose a new project name or use the original "
"project name. Then, copy the link to your Github project from the browser "
"bar. You should then have a link similar to this:"

#: ../../programming/activating.rst:48 d6225f67129d484ab6110fb67c6f6b8f
#, fuzzy
msgid "``https://github.com/MyAccountName/esp32-nmea2000-obp60/tree/master``"
msgstr "``Https://github.com/MyAccountName/esp32-nmea2000-obp60/tree/master``"

#: ../../programming/activating.rst:50 e5a84889565645de8de30aed45320c6d
#, fuzzy
msgid ""
"Der Part ``MyAccountName`` wird durch ihren eigenen Accountnamen ersetzt."
msgstr "The part ``MyAccountName`` will be replaced by your own account name."

#: ../../programming/activating.rst:54 30ebcc21bdb844f680b0a31a3b4e9353
#, fuzzy
msgid "Gitpod-Link öffnen"
msgstr "Open Gitpod link"

#: ../../programming/activating.rst:56 19672a43016c4a62ab1974941093549d
#, fuzzy
msgid ""
"Das Gitpad-Projekt wird über den Repository-Namen des Github-Projekts "
"aufgerufen:"
msgstr ""
"The Gitpad project is accessed via the repository name of the Github "
"project:"

#: ../../programming/activating.rst:58 3dd97efab8b2407386248c0f2e17f305
#, fuzzy
msgid ""
"``https://gitpod.io/#https://github.com/norbert-"
"walter/esp32-nmea2000-obp60/tree/master``"
msgstr ""
"``Https://gitpod.io/#https://github.com/norbert-"
"walter/esp32-nmea2000-obp60/tree/master``"

#: ../../programming/activating.rst:61 c6c4d5b86423426b942dcbecdd71be03
#, fuzzy
msgid ""
"Wer eine ganz bestimmte Release-Version kompilieren möchte, benutzt anstatt "
"``master`` die Nummer der Release-Version wie z.B. ``20250304``. Branches "
"und getaggte Versionen können auf die selbe Weise verwendet werden, indem "
"der Banch- oder Tagname verwendet wird."
msgstr ""
"If you want to compile a specific release version, use the release version "
"number, such as ``20250304``, instead of ``master``. Branches and tagged "
"versions can be used in the same way, using the branch or tag name."

#: ../../programming/activating.rst:63 f2aae53c18704c278c63548e7984c7ca
#, fuzzy
msgid ""
"Sie gelangen dann auf die Startseite von Gitpod und müssen sich dort "
"anmelden. Loggen Sie sich dort mit dem bereits vorhandenen Github-Account "
"ein."
msgstr ""
"You'll then be taken to the Gitpod homepage, where you'll need to log in. "
"Log in with your existing GitHub account."

#: ../../programming/activating.rst:67 ea9ce8554aa242d98eb75906e35d886a
#, fuzzy
msgid "Abb.: Login bei Gitpod mit Github-Account"
msgstr "Fig.: Login to Gitpod with Github account"

#: ../../programming/activating.rst:70 0ec5e784b7e84bc9992254aa88e187d1
#, fuzzy
msgid "Gitpod-Settings"
msgstr "Gitpod-Settings"

#: ../../programming/activating.rst:72 24efbeed2aa148b7955608a18ec75c04
#, fuzzy
msgid ""
"Danach können Sie die Default-Einstellungen übernehmen. Sie sind schon "
"korrekt auf das Projekt eingestellt."
msgstr ""
"You can then accept the default settings. They are already correctly "
"configured for the project."

#: ../../programming/activating.rst:76 7ea4eab5e35045a8a54e81f82d8b0ba3
#, fuzzy
msgid "Abb.: Einstellungen für Gitpod"
msgstr "Fig.: Settings for Gitpod"

#: ../../programming/activating.rst:79 31375106e13a42bea80a60a6d01707c7
#, fuzzy
msgid "Container-Start"
msgstr "Container-Start"

#: ../../programming/activating.rst:81 e4c1599c6f244092a6e19b34761e42c8
#, fuzzy
msgid ""
"Nach der Bestätigung der Einstellungen für Gitpod wird ein neuer Docker-"
"Container gestartet, danach werden alle notwendigen Softwarebestandteile "
"automatisch in den Container geladen. Der Vorgang kann etwas Zeit "
"beanspruchen. Am Ende sollten Sie einen fertigen Workplace vorfinden. Der "
"Workplace erscheint im Look & Feel von Visual Studio Code, ist jedoch nicht "
"mit ihm verwandt und in einigen Punkten verschieden. So gibt es z.B. kein "
"IntelliSense und die Anzahl der Plugins ist deutlich geringer als beim "
"Original. Zusätzlich fehlen die Buttons zum Kompilieren und zum Download auf"
" die Zielhardware, sowie der serielle Monitor, wie man das von Visual Studio"
" Code gewohnt ist. Über den Workplace lässt sich der Code verändern, "
"kompilieren und das Binary herunterladen. Der Download des Binarys auf die "
"Zielhardware muss mit externen Tools durchgeführt werden."
msgstr ""
"After confirming the Gitpod settings, a new Docker container will be "
"started, after which all necessary software components will be automatically"
" loaded into the container. This process may take some time. You should end "
"up with a finished workplace. The workplace has the look and feel of Visual "
"Studio Code, but is unrelated to it and differs in some respects. For "
"example, there is no IntelliSense, and the number of plugins is "
"significantly fewer than in the original. Additionally, the buttons for "
"compiling and downloading to the target hardware, as well as the serial "
"monitor, are missing, as is typical of Visual Studio Code. The workplace "
"allows you to modify the code, compile it, and download the binary. "
"Downloading the binary to the target hardware must be performed using "
"external tools."

#: ../../programming/activating.rst:85 a60f43151ed14b1b86db3b9f75ed67ba
#, fuzzy
msgid "Abb.: Fertiger Workplace"
msgstr "Fig.: Finished workplace"

#: ../../programming/activating.rst:88 ../../programming/activating.rst:220
#: 215e9bea680942669885d22682806c9a ed36ec5fa9054a4ba3c69b4ea484d434
#, fuzzy
msgid "Codeänderung und Kompilieren"
msgstr "Code change and compilation"

#: ../../programming/activating.rst:90 1a4545106199477d8915a151a92d6eb9
#, fuzzy
msgid ""
"Der Code zum OBP40 befindet sich im Ordner: "
"*/ESP32-NMEA2000-OBP60/lib/obp60task* . Durch Editieren der Datei "
"*platformio.ini* können einige Hardwareanpassungen zur Variante des ESP32-S3"
" und zum e-Paper-Display vorgenommen werden."
msgstr ""
"The code for the OBP40 is located in the folder: "
"*/ESP32-NMEA2000-OBP60/lib/obp60task* . By editing the *platformio.ini* "
"file, some hardware adjustments can be made to the ESP32-S3 variant and the "
"e-paper display."

#: ../../programming/activating.rst:92 0bb10fc8488d476398aa10bf9c0bd239
#, fuzzy
msgid ""
"Um den Code kompilieren zu können, müssen Sie folgende Befehle nacheinander "
"in das Terminal-Fenster unten rechts einfügen. Sie können dazu die Copy & "
"Paste Funktion benutzen."
msgstr ""
"To compile the code, you need to paste the following commands one after the "
"other into the Terminal window at the bottom right. You can use the copy and"
" paste function to do this."

#: ../../programming/activating.rst:94 a5865ea5b4bb4efab4de10b4afb79984
#, fuzzy
msgid "``cd /workspace/esp32-nmea2000-obp60``"
msgstr "``Cd /workspace/esp32-nmea2000-obp60``"

#: ../../programming/activating.rst:95 01e1c597156a4f97927f51645524437a
#, fuzzy
msgid ""
"``bash /workspace/esp32-nmea2000-obp60/lib/obp60task/run_install_tools``"
msgstr ""
"``Bash /workspace/esp32-nmea2000-obp60/lib/obp60task/run_install_tools``"

#: ../../programming/activating.rst:96 b9755d2e3b504917a3abaa1a0d0c05f8
#, fuzzy
msgid "``bash /workspace/esp32-nmea2000-obp60/lib/obp60task/run_obp40_s3``"
msgstr "``Bash /workspace/esp32-nmea2000-obp60/lib/obp60task/run_obp40_s3``"

#: ../../programming/activating.rst:98 538ac46f25234e81bfd38d79ead5bc30
#, fuzzy
msgid ""
"Nach dem zweiten Befehl werden alle notwendigen Tool-Chains und Bibliotheken"
" in den Workplace geladen. Dieser Vorgang kann einige Minuten dauern. Mit "
"dem letzten Befehl beginnt der eigentliche Kompiliervorgang, der ebenfalls "
"einiges an Zeit benötigt. Wenn Sie den Code später geändert haben und erneut"
" kompilieren wollen, so benutzen Sie einfach den letzten Befehl erneut."
msgstr ""
"After the second command, all necessary tool chains and libraries are loaded"
" into the Workplace. This process can take several minutes. The final "
"command begins the actual compilation process, which also takes some time. "
"If you later change the code and want to compile again, simply reuse the "
"last command."

#: ../../programming/activating.rst:102 fba9d6e2fafb40e8af3bf7878732b20c
#, fuzzy
msgid "Abb.: Source-Code kompilieren"
msgstr "Fig.: Compiling source code"

#: ../../programming/activating.rst:104 7b641f2f36c945d081b54b01c24788e6
#, fuzzy
msgid ""
"Wenn der Kompiliervorgang erfolgreich abgeschlossen ist, sollten Sie die "
"folgende Meldung sehen:"
msgstr ""
"If the compilation process is successful, you should see the following "
"message:"

#: ../../programming/activating.rst:108 e545bd7a6f934e20aea22bea1199e3d0
#, fuzzy
msgid "Abb.: Kompilierung beendet"
msgstr "Fig.: Compilation finished"

#: ../../programming/activating.rst:111 bf5de21db29d41efb514fecf7b565b5f
#, fuzzy
msgid "Binary-Download"
msgstr "Binary-Download"

#: ../../programming/activating.rst:113 8bc7f83805dd4c348439c87dcaee7f35
#, fuzzy
msgid ""
"Der Binary-Code zur Firmware befindet sich nach dem Kompilieren im "
"Verzeichnis:"
msgstr ""
"After compiling, the binary code for the firmware is located in the "
"directory:"

#: ../../programming/activating.rst:115 d2a6b4edff3d4cb48927405d72f88ac3
#, fuzzy
msgid "*/ESP32-NMEA2000-OBP60/.pio/build/obp40_s3* (für OBP40)"
msgstr "*/ESP32-NMEA2000-OBP60/.pio/build/obp40_s3* (for OBP40)"

#: ../../programming/activating.rst:119 57a726a861864fb38daf7e099dd6137d
#, fuzzy
msgid "Abb.: Datei-Download"
msgstr "Fig.: File download"

#: ../../programming/activating.rst:121 0353456104b140af8eb6b63208482609
#, fuzzy
msgid "Dabei haben die Files folgende Bedeutung:"
msgstr "The files have the following meaning:"

#: ../../programming/activating.rst:123 ../../programming/activating.rst:232
#: 719d774239504e2ea8813343dc85f501 801dcdfe00bb48b68b4f05ff48d49f10
#, fuzzy
msgid "bootloader.bin - ESP32-S3 Bootloader für Firmware"
msgstr "Bootloader.bin - ESP32-S3 bootloader for firmware"

#: ../../programming/activating.rst:124 a2019e5cfeb74742969484790fac17a0
#, fuzzy
msgid "partitions.bin - Partitionstabelle für den Flash Speicher"
msgstr "Partitions.bin - Partition table for the flash memory"

#: ../../programming/activating.rst:125 ../../programming/activating.rst:234
#: 6192435cd7684c34ae3d80663395d204 85f13b6965404a858838491ce8c3b2a1
#, fuzzy
msgid "firmware.bin - Binärfile als Update (nur Firmware)"
msgstr "Firmware.bin - Binary file as update (firmware only)"

#: ../../programming/activating.rst:126 ../../programming/activating.rst:235
#: 8a4a9437565143aaa83d30918c238c08 e19c394a76ec44b1804218dba50068c8
#, fuzzy
msgid "firmware.elf - ELF-File für Fehlerverfolgung"
msgstr "Firmware.elf - ELF file for bug tracking"

#: ../../programming/activating.rst:127 ../../programming/activating.rst:236
#: bcaa5079cfb5489d896c873699e739e9 d8ffe4be08ea473bb36382a1dc15d801
#, fuzzy
msgid ""
"obp40_s3-all.bin - Binärfile mit allen Bestandteilen (Bootloader, "
"Partitionstabelle, Firmware, Default-Settings)"
msgstr ""
"Obp40_s3-all.bin - Binary file with all components (bootloader, partition "
"table, firmware, default settings)"

#: ../../programming/activating.rst:128 ../../programming/activating.rst:237
#: 4af9e23b87d84f9699ca95f34f90f2ec bfeae3f0e6ea40baae866ffd0b98c911
#, fuzzy
msgid "**obp40_s3-dev20240820-all.bin** - wie obp40_s3-all.bin"
msgstr "**Obp40_s3-dev20240820-all.bin** - like obp40_s3-all.bin"

#: ../../programming/activating.rst:129 ../../programming/activating.rst:238
#: c58e5c806d8b4fcc9714dea6e7bd6ab0 f9708da9264a4bceb560011e43bed77a
#, fuzzy
msgid ""
"**obp40_s3-dev20240820-update.bin** - Binärfile als Update (nur Firmware)"
msgstr ""
"**Obp40_s3-dev20240820-update.bin** - Binary file as update (firmware only)"

#: ../../programming/activating.rst:131 f52cfd6bb5eb48299a04882ec08ec10d
#, fuzzy
msgid ""
"Je nachdem, ob man mit Default-Einstellungen starten oder mit den alten "
"Einstellungen weiter arbeiten möchte, kann man eine der beiden fett "
"hervorgehobenen Dateien herunter laden. Das geht am einfachsten, wenn man "
"die entsprechende Datei im Dateibaum per Rechtsklick auswählt und sie dann "
"über **Download** herunterlädt. Die **update-** Datei kann man später auf "
"dem OBP40 über die Webseite :ref:`Update` hochladen und damit die Firmware "
"aktualisieren. Die **all-** Datei muss über USB geflasht werden."
msgstr ""
"Depending on whether you want to start with the default settings or continue"
" working with the old settings, you can download one of the two files "
"highlighted in bold. The easiest way to do this is to right-click the "
"corresponding file in the file tree and then select **Download**. The "
"**update** file can later be uploaded to the OBP40 via the :ref:`Update` "
"website to update the firmware. The **all** file must be flashed via USB."

#: ../../programming/activating.rst:134 ../../programming/activating.rst:269
#: 5a8a4003bb6e4b3fa7a3dcf605320a53 798830f299954dd38af4ca9e84679209
#, fuzzy
msgid "Source-Code Aktualisierung"
msgstr "Source code update"

#: ../../programming/activating.rst:136 da7ccb925a9a408fafbcca4f97cce58e
#, fuzzy
msgid ""
"Wer die Source-Code-Änderungen in seinem Github-Repository speichern möchte,"
" kann die Github-Funktionalität des Workplace nutzen. Auf der linken Seite "
"befindet sich ein Icon mit einer Pfadverzweigung und einer kleinen blauen "
"Zahl daran. Dieses Icon teilt dem Benutzer mit, wie viele Änderungen an "
"Dateien durch die Source-Code-Änderungen vorgenommen worden sind. Mit einem "
"Klick auf das Icon kann man eine Beschreibung für die Änderungen hinzufügen."
" Wenn man dem Dialog rechts am blauen Commit-Button folgt, kann man **Commit"
" und Push** anklicken. Dadurch werden die Code-Änderungen in das eigene "
"Github-Repository hochgeladen und gesichert. Wer später dort weitermachen "
"möchte, wo er zuletzt aufgehört hat, kann der Vorgehensweise ab Punkt 2 "
"folgen und den Gitpod-Link zu seinem Projekt öffnen."
msgstr ""
"Anyone who wants to save the source code changes to their GitHub repository "
"can use the GitHub functionality of the Workplace. On the left side, there "
"is an icon with a path branch and a small blue number. This icon tells the "
"user how many file changes have been made as a result of the source code "
"changes. By clicking on the icon, you can add a description for the changes."
" If you follow the dialog to the right of the blue Commit button, you can "
"click **Commit and Push**. This will upload the code changes to your GitHub "
"repository and save them. If you want to continue where you left off later, "
"you can follow the procedure from step 2 and open the GitPod link to your "
"project."

#: ../../programming/activating.rst:139 4ca9e04aaa264f118421ef988ba7f10d
#, fuzzy
msgid ""
"Nur mit einem Beschreibungstext zur Codeänderung können Sie die Änderungen "
"committen und nach Github hochladen."
msgstr ""
"Only with a description of the code change can you commit the changes and "
"upload them to Github."

#: ../../programming/activating.rst:143 ../../programming/activating.rst:278
#: ../../programming/activating.rst:287 2316c05d5809431e87227903db409bad
#: e9d457c716304e66bcf4de06c5d1828f eef29c74613a422bb834c5b20bea5eb7
#, fuzzy
msgid "Abb.: Source Code auf Github sichern"
msgstr "Fig.: Save source code on Github"

#: ../../programming/activating.rst:146 5a126377ffd74934a557559809c6caf7
#, fuzzy
msgid "Visual Studio Code / PlatformIO"
msgstr "Visual Studio Code / PlatformIO"

#: ../../programming/activating.rst:148 fdb4e7974d3a4b2faae4277515d70f88
#, fuzzy
msgid ""
"**Visual Studio Code** (VSC) ist eine weit verbreitete Software-"
"Entwicklungsumgebung, die eine Vielzahl an Programmiersprachen unterstützt, "
"und die es für verschiedene Betriebssysteme gibt. Die Entwicklungsumgebung "
"läuft dabei auf einem lokalen PC. Zur Programmierung von Embedded Elektronik"
" auf Mikrocontrollerbasis in C und C++ wurde das Plugin **PlatformIO** für "
"Visual Studio Code geschaffen. Damit ist es unkompliziert möglich, eine "
"Softwareentwicklung für Hardware durchzuführen. In einer umfangreichen "
"Datenbank sind eine Vielzahl an Elektronik-Hardware-Boards aufgeführt. "
"Passend zum Hardware-Board werden die notwendigen Tool-Chains und Software-"
"Bibliotheken zu einem Projekt hinzugefügt, ohne dass man sich um Details "
"kümmern muss."
msgstr ""
"**Visual Studio Code** (VSC) is a widely used software development "
"environment that supports a variety of programming languages and is "
"available for various operating systems. The development environment runs on"
" a local PC. The **PlatformIO** plugin for Visual Studio Code was created "
"for programming microcontroller-based embedded electronics in C and C++. "
"This plugin makes it easy to develop software for hardware. A comprehensive "
"database lists a wide variety of electronic hardware boards. The necessary "
"tool chains and software libraries are added to a project based on the "
"hardware board, without requiring any attention to detail."

#: ../../programming/activating.rst:151 bfe82d940c134f3090a7d7de8f07552b
#, fuzzy
msgid ""
"Wer an einer Weiterentwicklung der Firmware zum OBP40 interessiert ist, "
"sollte Visual Studio Code / PlatformIO benutzen. Visual Studio Code verfügt "
"über Mechanismen, mit denen Softwareänderungen über Github eingepflegt und "
"verfolgt werden können."
msgstr ""
"Anyone interested in further developing the OBP40 firmware should use Visual"
" Studio Code / PlatformIO. Visual Studio Code has mechanisms for "
"implementing and tracking software changes via GitHub."

#: ../../programming/activating.rst:153 c068bf2c0fdc411f848ec2bb6cd07c0b
#, fuzzy
msgid ""
"Wie man Visual Studio Code installiert und danach das Plugin PlatformIO "
"einrichtet, ist in dieser `Anleitung`_ beschrieben. Sie finden im Internet "
"auch weitere Beschreibungen zu diesem Thema."
msgstr ""
"How to install Visual Studio Code and then set up the PlatformIO plugin is "
"described in this `Anleitung`_. You can also find further descriptions on "
"this topic online."

#: ../../programming/activating.rst:157 3fefccab66b1495fb8658d8d23bb1209
#, fuzzy
msgid "**Der Workflow für Visual Studio Code sieht folgendermaßen aus:**"
msgstr "**The workflow for Visual Studio Code looks like this:**"

#: ../../programming/activating.rst:160 6dc3505695bb4195a87c380d88494789
#, fuzzy
msgid "Projekt in Visual Studio Code importieren"
msgstr "Import project into Visual Studio Code"

#: ../../programming/activating.rst:162 8c78589a7e5d4ece92627416ebd4970b
#, fuzzy
msgid "Flashen der Firmware auf die Zielhardware"
msgstr "Flashing the firmware onto the target hardware"

#: ../../programming/activating.rst:163 74fe3e09c54b4ca381011e61540b12ab
#, fuzzy
msgid "Debuggen der Firmware über serielle USB-Verbindung"
msgstr "Debugging the firmware via serial USB connection"

#: ../../programming/activating.rst:169 30fe3a8158b5435ca23bec6bcd2701f0
#, fuzzy
msgid ""
"Als erstes wird das Original-Projekt zum OBP40 in das eigene private "
"Repository geforkt. Ein Fork ist sozusagen eine Aufgabelung bzw. eine "
"Abtrennung des Source-Codes in einen neuen Zweig. Durch einen Fork entsteht "
"eine Kopie des Original-Projektes in ihrem privaten Repository. So können "
"Sie Änderungen am Code vornehmen und in Ihrem Repository speichern. Der neu "
"entstandene Code ist dann eine Erweiterung oder Modifikation des Original-"
"Projektes."
msgstr ""
"First, the original OBP40 project is forked into your private repository. A "
"fork is essentially a split or separation of the source code into a new "
"branch. A fork creates a copy of the original project in your private "
"repository. This allows you to make changes to the code and save them in "
"your repository. The newly created code is then an extension or modification"
" of the original project."

#: ../../programming/activating.rst:178 7bbe4d6b38764bdf9d1283d539738ac1
#, fuzzy
msgid ""
"Melden Sie sich als erstes bei Github an, gehen dann in das `Original-"
"Projekt zum OBP60`_ und drücken oben rechts auf die Schaltfläche **Fork**. "
"Sie werden danach gefragt, ob Sie der Quelle vertrauen, und können dann "
"einen neuen Projektnamen vergeben oder den originalen Projektnamen benutzen."
" Kopieren Sie sich danach den Link zu Ihrem Github-Projekt aus der Browser-"
"Zeile. Sie sollten dann einen ähnlichen Link haben wie diesen:"
msgstr ""
"First, log in to Github, then go to `Original-Projekt zum OBP60`_ and click "
"the **Fork** button in the top right corner. You'll be asked whether you "
"trust the source, and you can then choose a new project name or use the "
"original project name. Then, copy the link to your Github project from the "
"browser bar. You should then have a link similar to this:"

#: ../../programming/activating.rst:180 0f7d7893a6a84561bd9aedb50be9be47
#, fuzzy
msgid "``https://github.com/MyAccountName/esp32-nmea2000-obp60``"
msgstr "``Https://github.com/MyAccountName/esp32-nmea2000-obp60``"

#: ../../programming/activating.rst:182 97f1ed736c674df096361fc0acb26c07
#, fuzzy
msgid ""
"Der Part ``MyAccountName`` wird durch Ihren eigenen Accountnamen ersetzt."
msgstr "The part ``MyAccountName`` will be replaced by your own account name."

#: ../../programming/activating.rst:185 08513509b2c944d19956b6997599f03a
#, fuzzy
msgid "Projekt in VSC importieren"
msgstr "Import project into VSC"

#: ../../programming/activating.rst:187 084da2b206de4491b2bc57c41aa817c2
#, fuzzy
msgid ""
"Zu Beginn finden Sie einen leeren Workplace vor. Drücken Sie auf den Button "
"**Clone Repository** und tragen in der oberen Zeile den Link zu Ihrem "
"Github-Projekt ein. Danach klicken Sie auf die darunter liegende Zeile "
"**Clone from Github**."
msgstr ""
"Initially, you'll see an empty Workplace. Click the **Clone Repository** "
"button and enter the link to your Github project in the top line. Then click"
" the **Clone from Github** line below."

#: ../../programming/activating.rst:191 bab647e870eb450e8298f8c6b35e20ec
#, fuzzy
msgid "Abb.: Projekt clonen"
msgstr "Fig.: Clone project"

#: ../../programming/activating.rst:193 78068a9eee5844f186fa3b8b8484a9d5
#, fuzzy
msgid ""
"Damit beginnt der Download des Projektes und im Workplace erscheint auf der "
"linken Seite nach einiger Zeit das Projekt mit dem Dateibaum. Als letztes "
"öffnet sich auf rechten Seite eine Datei mit dem Namen **platformio.ini**. "
"Diese Datei schließen Sie oben rechts im Fenster über das Kreuz. Es handelt "
"sich um die Konfigurationsdatei zum NMEA2000-Gateway, das wir in unserem "
"Fall nicht benötigen."
msgstr ""
"This will begin downloading the project, and after a while, the project and "
"its file tree will appear on the left side of the Workplace. Finally, a file"
" named **platformio.ini** will open on the right side. Close this file using"
" the cross in the top right corner of the window. This is the configuration "
"file for the NMEA 2000 gateway, which we don't need in our case."

#: ../../programming/activating.rst:197 9fc72699ebdb4bf68986e35c7f481950
#, fuzzy
msgid "Abb.: Konfigurationsdatei schließen"
msgstr "Fig.: Close configuration file"

#: ../../programming/activating.rst:199 85f801a7b74446318c74863007af02e3
#, fuzzy
msgid ""
"Gehen Sie dann in den Dateibaum und öffnen den Pfad: "
"``/esp32-nmea2000-obp60/lib/obp60task`` und öffnen dort die Datei "
"**platformio.ini**, die zum OBP40-Projekt gehört. Ändern Sie in der Datei "
"die serielle Schnittstelle entsprechend zum Port, an dem Sie das OBP40 "
"angeschlossen haben. Die Schnittstellenbezeichnungen unter Windows und Linux"
" sind dabei unterschiedlich."
msgstr ""
"Then, navigate to the file tree and open the path: "
"``/esp32-nmea2000-obp60/lib/obp60task`` and open the **platformio.ini** file"
" belonging to the OBP40 project. In the file, change the serial interface to"
" match the port to which you connected the OBP40. The interface names are "
"different under Windows and Linux."

#: ../../programming/activating.rst:201 714cf07a969941138709645cdf7d4e5d
#, fuzzy
msgid "Windows: COMx"
msgstr "Windows: COMx"

#: ../../programming/activating.rst:202 a257c239ed2d45a3b3c96420508073b8
#, fuzzy
msgid "Linux: /dev/ttyACM0"
msgstr "Linux: /dev/ttyACM0"

#: ../../programming/activating.rst:205 b35f3b374e1e4fb1b5545d6cf3b5d04d
#, fuzzy
msgid ""
"Für Linux und Win10/11 sind entsprechende USB-Treiber im Betriebssystem "
"integriert. Für die älteren Win7/8-Versionen benötigen Sie `zusätzliche "
"Treiber`_, um die USB-Schnittstelle Ihres Rechners benutzen zu können."
msgstr ""
"For Linux and Windows 10/11, corresponding USB drivers are integrated into "
"the operating system. For older versions of Windows 7/8, you will need "
"`zusätzliche Treiber`_ to use your computer's USB port."

#: ../../programming/activating.rst:211 d707e5d6baac47d18fdaf9d52d5b9327
#, fuzzy
msgid "Abb.: Konfigurationsdatei schließen und seriellen Port einstellen"
msgstr "Fig.: Close configuration file and set serial port"

#: ../../programming/activating.rst:213 41f7e54105e94561862a2b5842721150
#, fuzzy
msgid ""
"Wählen Sie danach die zu benutzende Hardware-Umgebung aus, indem Sie auf die"
" untere Zeile klicken. Es öffnet sich dann oben ein Fenster, in dem Sie die "
"Einstellung **env:obp40_s3** auswählen. Damit wird sichergestellt, dass die "
"Firmware für die Hardware OBP40 erstellt wird."
msgstr ""
"Next, select the hardware environment you want to use by clicking on the "
"bottom line. A window will open at the top where you can select the setting "
"**env:obp40_s3**. This ensures that the firmware is created for the OBP40 "
"hardware."

#: ../../programming/activating.rst:217 ed5ef502950e466d9e7194de1d23542d
#, fuzzy
msgid "Abb.: Hardware-Umgebung auswählen"
msgstr "Fig.: Select hardware environment"

#: ../../programming/activating.rst:222 66df99693e18451283b606066bd3d2c7
#, fuzzy
msgid ""
"Wenn Sie Ihre Code-Änderungen abgeschlossen haben, können Sie den "
"Kompiliervorgang am Symbol mit dem Haken in der untersten Zeile aktivieren. "
"Vergewissern Sie sich vorher, dass die korrekte Hardware-Umgebung "
"**env:obp40_s3(esp32-nmea2000)** ausgewählt worden ist. Der Kompiliervorgang"
" benötigt einiges an Zeit. Am Ende sollten Sie eine Mitteilung im Terminal-"
"Fenster erhalten, die Sie über das Resultat informiert."
msgstr ""
"Once you've completed your code changes, you can activate the compilation "
"process using the checkmark icon in the bottom line. Before doing so, make "
"sure you've selected the correct hardware environment, "
"**env:obp40_s3(esp32-nmea2000)**. The compilation process will take some "
"time. At the end, you should see a message in the terminal window informing "
"you of the result."

#: ../../programming/activating.rst:226 db53e0acc904415cb5ebe972e60dc96b
#, fuzzy
msgid "Abb.: Kompilierung"
msgstr "Fig.: Compilation"

#: ../../programming/activating.rst:228 7d4b733dd6d5443b81b96dfce49de2ce
#, fuzzy
msgid ""
"Der Binary-Code zur Firmware befindet sich nach dem Kompilieren im "
"Verzeichnis: */esp32-nmea2000-obp60/.pio/build/obp40_s3*"
msgstr ""
"The binary code for the firmware is located in the directory after "
"compilation: */esp32-nmea2000-obp60/.pio/build/obp40_s3*"

#: ../../programming/activating.rst:230 9a042f7f4f994a00b15c4606064a2be3
#, fuzzy
msgid "Dabei haben die Dateien folgende Bedeutung:"
msgstr "The files have the following meaning:"

#: ../../programming/activating.rst:233 0704a7039819426e9b62cc44606e40fa
#, fuzzy
msgid "partitions.bin - Partitionstabelle für den Flash-Speicher"
msgstr "Partitions.bin - Partition table for the flash memory"

#: ../../programming/activating.rst:241 a86b9fc0847b4a2bb9374d54b05d59ec
#, fuzzy
msgid "Flashen der Firmware"
msgstr "Flashing the firmware"

#: ../../programming/activating.rst:243 6f8090ddd8ac41b4b7c71b01f3d6ad24
#, fuzzy
msgid ""
"Wenn Sie die Firmware auf das OBP40 flashen möchten, dann verbinden Sie das "
"OBP40 mit dem USB-Anschluss Ihres PCs und drücken danach das Symbol mit dem "
"Pfeil in der untersten Zeile. Zuerst wird die Firmware kompiliert und "
"anschließend auf das OBP40 übertragen. Im Terminalfenster sehen Sie den "
"Ablauf der einzelnen Schritte."
msgstr ""
"If you want to flash the firmware onto the OBP40, connect the OBP40 to your "
"PC's USB port and then click the arrow icon in the bottom row. The firmware "
"will first be compiled and then transferred to the OBP40. You can see the "
"individual steps in the terminal window."

#: ../../programming/activating.rst:247 61371212ab4e427e92307b424be47020
#, fuzzy
msgid "Abb.: Flashen der Firmware"
msgstr "Fig.: Flashing the firmware"

#: ../../programming/activating.rst:250 b1a438e57d3943d08ecf7eb41d403b62
#, fuzzy
msgid ""
"Falls keine Verbindung mit dem OBP40 über die USB-Schnittstelle zustande "
"kommt, können Sie das OBP40 manuell in den Flash-Modus versetzen. Trennen "
"Sie zunächst die USB-Verbindung. Öffnen Sie danach die hintere "
"Gehäuseabdeckung des OBP40 und halten Sie die Taste ``BOOT`` gedrückt. Dann "
"verbinden Sie das OBP40 mit Ihrem PC über das USB-Verbindungskabel. Sobald "
"die USB-Schnittstelle erkannt wird, erfolgt eine Tonausgabe auf dem PC. Sie "
"können dann die Taste ``BOOT`` loslassen. Der ESP32-S3 befindet sich jetzt "
"im Flash-Modus. Danach starten Sie einen erneuten Flash-Vorgang über das "
"Symbol mit dem Pfeil, wie oben gezeigt."
msgstr ""
"If the OBP40 cannot be connected via the USB interface, you can manually put"
" the OBP40 into flash mode. First, disconnect the USB connection. Then, open"
" the rear cover of the OBP40 and hold down the ``BOOT`` button. Then connect"
" the OBP40 to your PC using the USB cable. Once the USB interface is "
"recognized, a sound will be heard on the PC. You can then release the "
"``BOOT`` button. The ESP32-S3 is now in flash mode. Then, restart the flash "
"process using the arrow icon, as shown above."

#: ../../programming/activating.rst:254 634f8031f264448fb0fafb2e0becd984
#, fuzzy
msgid "Abb.: Platinenrückseite CrowPanel 4.2"
msgstr "Fig.: Back of the CrowPanel 4.2 board"

#: ../../programming/activating.rst:257 898fbab11f2d4c70981e954117bf7b3e
#, fuzzy
msgid "Debuggen der Firmware"
msgstr "Debugging the firmware"

#: ../../programming/activating.rst:259 06b15e9d4da34f8893a8f02cdb41ac11
#, fuzzy
msgid ""
"Eine einfache Möglichkeit zur Fehlersuche besteht darin, dass man Debugging-"
"Informationen über die serielle USB-Schnittstelle ausgibt, die man auf dem "
"PC mit einem Terminalprogramm empfangen kann. In der Firmware zum OBP40 sind"
" Funktionen implementiert, mit denen man Debugging-Ausgaben erzeugen kann. "
"In Visual Studio Code ist ein serielles Terminal integriert. Sie können es "
"über das Symbol mit dem Stecker in der untersten Zeile starten. Die Ausgaben"
" erfolgen dann unten rechts im Bereich \"Terminal\". Wenn Sie das Logging "
"beenden wollen, klicken Sie rechts auf den aktuell laufenden Task und "
"beenden ihn, indem Sie auf das Symbol mit dem Papierkorb drücken."
msgstr ""
"An easy way to troubleshoot problems is to output debugging information via "
"the USB serial interface, which can be received on the PC using a terminal "
"program. The OBP40 firmware contains functions that allow you to generate "
"debugging output. A serial terminal is integrated into Visual Studio Code. "
"You can launch it using the plug-in icon in the bottom row. The output is "
"then displayed in the \"Terminal\" area at the bottom right. To stop "
"logging, right-click on the currently running task and end it by clicking "
"the trash can icon."

#: ../../programming/activating.rst:262 ba2dde83653f4407af88ec08df2709d7
#, fuzzy
msgid ""
"Beachten Sie, dass die Schnittstellengeschwindigkeit standardmäßig auf "
"**115200 Bd 8N1** eingestellt ist. Die Geschwindigkeit der seriellen USB-"
"Schnittstelle lässt sich bei Bedarf in platformio.ini unter "
"**monitor_speed** verändern."
msgstr ""
"Please note that the interface speed is set to **115200 Mbps 8N1** by "
"default. The USB serial interface speed can be changed if necessary in "
"platformio.ini under **monitor_speed**."

#: ../../programming/activating.rst:266 ad5c5787febb46538ef168f43477677f
#, fuzzy
msgid "Abb.: Debugging über Serial Monitor"
msgstr "Fig.: Debugging via Serial Monitor"

#: ../../programming/activating.rst:271 cfefd0e96a6644c8949aff769d7556df
#, fuzzy
msgid ""
"Wenn man die Source-Code-Änderungen in seinem Github-Repository speichern "
"möchte, kann man die Github-Funktionalität des Workplace nutzen. Auf der "
"linken Seite befindet sich ein Icon mit einer Pfadverzweigung und einer "
"kleinen blauen Zahl daran. Dieses Icon teilt dem Benutzer mit, wie viele "
"Änderungen an Dateien durch die Source-Code-Änderungen vorgenommen worden "
"sind. Mit einem Klick auf das Icon kann man eine Beschreibung für die "
"Änderungen hinzufügen. Wenn man dem Dialog rechts am blauen Commit-Button "
"folgt, kann man **Commit und Push** anklicken. Dadurch werden die Code-"
"Änderungen in das eigene Github-Repository hochgeladen und gesichert."
msgstr ""
"If you want to save the source code changes to your GitHub repository, you "
"can use the GitHub functionality of the Workplace. On the left side, there "
"is an icon with a path branch and a small blue number next to it. This icon "
"tells the user how many file changes have been made as a result of the "
"source code changes. By clicking on the icon, you can add a description for "
"the changes. If you follow the dialog to the right of the blue Commit "
"button, you can click **Commit and Push**. This will upload and save the "
"code changes to your GitHub repository."

#: ../../programming/activating.rst:274 22bd4ae68fa94c018c3cea7ecc479608
#, fuzzy
msgid ""
"Nur mit einem Beschreibungstext zur Codeänderung können Sie die Änderungen "
"commiten und nach Github hochladen."
msgstr ""
"Only with a description of the code change can you commit the changes and "
"upload them to Github."

#: ../../programming/activating.rst:280 91ad68b2b7c1455881fc373021a71180
#, fuzzy
msgid ""
"Wer später dort weitermachen möchte, wo er zuletzt aufgehört hat, kann sich "
"den letzten Stand auf Github in seinen Workplace herunterladen und "
"aktualisieren. Dazu klicken Sie links auf das Pfadsymbol und dann oben im "
"selben Fenster auf die kleinen 3 Punkte. Über **Pull** können Sie ihr "
"Projekt aktualisieren."
msgstr ""
"If you want to pick up where you left off later, you can download the latest"
" version from Github to your Workplace and update it. To do this, click the "
"path icon on the left and then the three small dots at the top of the same "
"window. You can update your project using **Pull**."

#: ../../programming/activating.rst:283 ff9a4fc1e0a74f468b6312154e55a2bc
#, fuzzy
msgid ""
"Es ist empfehlenswert, vor Beginn jeder Codeänderung einen **Pull** "
"durchzuführen, um das Projekt auf den aktuellen Stand zu setzen, denn ein "
"nachträglich ausgeführtes **Pull** würde den bereits veränderten Code "
"überschreiben."
msgstr ""
"It is recommended to perform a **pull** before starting any code change to "
"bring the project up to date, because a subsequent **pull** would overwrite "
"the code that has already been changed."
