name: i18n MT (Google API key)

on:
  push:
    branches: ["**"]
    # Trigger bei Änderungen an Quellen/Configs/Workflow, aber NICHT bei locale/**
    paths:
      - "**/*.rst"
      - "**/conf.py"
      - "scripts/mt_po.py"
      - ".github/workflows/i18n-google.yml"
    paths-ignore:
      - "**/locale/**"
  pull_request:
    paths:
      - "**/*.rst"
      - "**/conf.py"
      - "scripts/mt_po.py"
      - ".github/workflows/i18n-google.yml"
    paths-ignore:
      - "**/locale/**"
  workflow_dispatch:

jobs:
  i18n:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # >>> Hier deine Zielsprachen pflegen <<<
        lang: [en] # Example: [en, fr, es]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Sphinx + tools
        run: |
          pip install -U sphinx sphinx-intl polib requests

      - name: Detect Sphinx docs directory
        id: detect
        shell: bash
        run: |
          set -e
          for d in docs doc source documentation; do
            if [ -f "$d/conf.py" ]; then
              echo "DOCS_DIR=$d" >> $GITHUB_ENV
              echo "Detected docs dir: $d"
              exit 0
            fi
          done
          # Fallback (falls du später umbenennst – bitte anpassen)
          echo "DOCS_DIR=docs" >> $GITHUB_ENV
          echo "::warning::No conf.py found in common folders; defaulting to 'docs'."

      # Optionaler Key-Check (zeigt, ob API erreichbar ist)
      - name: Sanity check Google API key (masked)
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          if [ -z "$GOOGLE_API_KEY" ]; then
            echo "GOOGLE_API_KEY is NOT set"; exit 1
          fi
          echo "GOOGLE_API_KEY is set (length: ${#GOOGLE_API_KEY})"
          curl -sS -X GET "https://translation.googleapis.com/language/translate/v2/languages?key=$GOOGLE_API_KEY" | head -c 400 || true

      # 1) gettext-Templates extrahieren
      - name: Extract gettext templates
        working-directory: ${{ env.DOCS_DIR }}
        run: sphinx-build -b gettext . _build/gettext

      # 2) PO-Dateien anlegen/aktualisieren (erzwinge Zielordner 'locale' im DOCS_DIR)
      - name: Update PO files for ${{ matrix.lang }}
        working-directory: ${{ env.DOCS_DIR }}
        run: sphinx-intl update -p _build/gettext -l ${{ matrix.lang }} -d locale

      # Debug: Wo liegen die .po wirklich?
      - name: Debug: list created PO files
        run: |
          echo ">> Searching ${{ env.DOCS_DIR }}/locale:"
          find "${{ env.DOCS_DIR }}/locale" -type f -name "*.po" -print 2>/dev/null || true
          echo ">> Searching ./locale (repo root):"
          find "locale" -type f -name "*.po" -print 2>/dev/null || true
          echo ">> Git status:"
          git status --porcelain || true

      # 3) Machine Translation (arbeitet relativ zu DOCS_DIR)
      - name: Machine-translate PO (${{ matrix.lang }})
        working-directory: ${{ env.DOCS_DIR }}
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          TARGET_LANG: ${{ matrix.lang }}
          REWRITE_FUZZY: "true"
          REWRITE_FILLED: "false"
          BATCH_SIZE: "128"
          THROTTLE_SECONDS: "0.2"
        run: python ../scripts/mt_po.py

      # 4) Änderungen committen – benutze den tatsächlich existierenden Pfad
      - name: Commit translation updates
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -d "${{ env.DOCS_DIR }}/locale" ]; then
            git add "${{ env.DOCS_DIR }}/locale"
          elif [ -d "locale" ]; then
            git add "locale"
          else
            echo "No locale directory found to commit."
          fi

          git status --porcelain
          git commit -m "chore(i18n): update ${{ matrix.lang }} translations [skip ci]" || echo "No changes"
          git push || true
